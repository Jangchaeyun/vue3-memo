{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-9fded72c\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"memo\"\n};\nconst _hoisted_2 = {\n  class: \"act\"\n};\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    class: \"btn btn-primary\",\n    onClick: _cache[0] || (_cache[0] = $event => $setup.add())\n  }, \"+ 추가\")]), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.state.data, (d, idx) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: d.id,\n      onClick: $event => $setup.edit(idx)\n    }, _toDisplayString(d.content), 9\n    /* TEXT, PROPS */\n    , _hoisted_3);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]);\n}","map":{"version":3,"mappings":";;;;;EACSA,KAAK,EAAC;;;EACFA,KAAK,EAAC;;;;uBADfC,oBAQM,KARN,cAQM,CAPFC,oBAEM,KAFN,cAEM,CADFA,oBAA4D,QAA5D,EAA4D;IAApDF,KAAK,EAAC,iBAA8C;IAA3BG,OAAK,sCAAEC,YAAF;EAAsB,CAA5D,EAA+C,MAA/C,CACE,CAFN,CAOE,EAJFF,oBAGK,IAHL,EAGK,IAHL,EAGK,oBAFDD,oBAAsFI,SAAtF,EAAsF,IAAtF,EAAsFC,YAA/DF,aAAMG,IAAyD,EAArD,CAArBC,CAAqB,EAAlBC,GAAkB,KAAf;yBAAlBR,oBAAsF,IAAtF,EAAsF;MAAlDS,GAAG,EAAEF,CAAC,CAACG,EAA2C;MAAtCR,OAAK,YAAEC,YAAKK,GAAL;IAA+B,CAAtF,mBAAqED,CAAC,CAACI,QAAvE,EAA8E;IAAA;IAA9E,EAA8EC,UAA9E;GAAsF,CAAtF;;EAAA,CAEC,EAHL,CAIE,CARN","names":["class","_createElementBlock","_createElementVNode","onClick","$setup","_Fragment","_renderList","data","d","idx","key","id","content","_hoisted_3"],"sourceRoot":"","sources":["E:\\vue3-memo\\frontend\\src\\components\\Memo.vue"],"sourcesContent":["<template>\r\n    <div class=\"memo\">\r\n        <div class=\"act\">\r\n            <button class=\"btn btn-primary\" @click=\"add()\">+ 추가</button>\r\n        </div>\r\n        <ul>\r\n            <li v-for=\"(d, idx) in state.data\" :key=\"d.id\" @click=\"edit(idx)\">{{ d.content }}</li>\r\n\r\n        </ul>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {reactive} from \"vue\";\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    setup() {\r\n        const state = reactive({\r\n            data:[],\r\n        })\r\n        const add = () => {\r\n            const content = prompt(\"내용을 입력해주세요.\");\r\n            \r\n            if(!content) {\r\n                return alert(\"내용을 입력해주세요.\");\r\n                add();\r\n            }\r\n            axios.post(\"/api/memos\", { content }).then((res) => {\r\n                state.data = res.data;\r\n            });\r\n        };\r\n\r\n        const edit = (id) => {\r\n            const content = prompt(\"내용을 입력해주새요\", state.data[id]);\r\n            console.log(content);\r\n            axios.put(\"/api/memos/\" + idx, {content}).then((res) => {\r\n                state.data = res.data;\r\n            });\r\n        }\r\n\r\n        axios.get(\"/api/memos\").then((res) => {\r\n            state.data = res.data;\r\n        });\r\n\r\n        return { state, add, edit };\r\n    },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.memo {\r\n    .act {\r\n        padding: 10px 10px 5px 5px;\r\n        text-align: right;\r\n    }\r\n\r\n    ul {\r\n        list-style: none;\r\n        padding: 15px;\r\n        margin: 0;\r\n\r\n    li {\r\n        padding: 15px;\r\n        margin: 10px 0;\r\n        border: 1px solid #eee;\r\n    }\r\n    }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}